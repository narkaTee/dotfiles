# vim: ft=sh
# set PATH to include the private bin if it exists
if [ -d "$HOME/bin" ]; then
    PATH="$PATH:$HOME/bin"
fi

# set PATH to include git-scripts if it exists
if [ -d "$HOME/.config/git-scripts" ]; then
    PATH="$PATH:$HOME/.config/git-scripts"
fi

# set PATH to include the global composer bin if it exists
if [ -d "$HOME/.composer/vendor/bin" ]; then
    PATH="$PATH:$HOME/.composer/vendor/bin"
fi

# Setup EDITOR and VISUAL
if hash vim 2>/dev/null; then
    export EDITOR="vim"
    export VISUAL="$EDITOR"
else
    echo "Dude, no vim?!"
fi

# source local bash_profile if exists
if [ -f "$HOME/.bash_profile.local" ]; then
    . "$HOME/.bash_profile.local"
fi

# start auth agent
# I'm going to be a bit dirty here:
# Instead of checking for cygwin properly just checking for ssh-pageant
if hash ssh-pageant 2>/dev/null; then
    # start ssh-pageant (cygwin)
    eval $(/usr/bin/ssh-pageant -q -r -a "/tmp/.ssh-pageant-$USERNAME")
else
    # ssh-pagent not found use standard utils
    ssh-add -l &>/dev/null
    if [ "$?" == 2 ]; then
        test -r ~/.ssh-agent && eval "$(<~/.ssh-agent)" >/dev/null

        ssh-add -l &>/dev/null
        if [ "$?" == 2 ]; then
            (umask 066; ssh-agent > ~/.ssh-agent)
            eval "$(<~/.ssh-agent)" >/dev/null
            ssh-add
        fi
    fi
fi

# source interactive bash config
if [ -f "$HOME/.bashrc" ]; then
    . "$HOME/.bashrc"
fi

# Source rvm if it's installed
# $? will be 1 on a new shell if this is not in a extra if and rvm is not present.
if [[ -s "$HOME/.rvm/scripts/rvm" ]]; then
    source "$HOME/.rvm/scripts/rvm"
fi
