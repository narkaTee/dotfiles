# Make sure the shell is interactive
case $- in
    *i*) ;;
    *) return ;;
esac

# Disable XON/XOFF flow control
test -z "$ZSH_VERSION" && stty -ixon

# Load posix scripts
if [ -d "$HOME/.config/shrc.d/" ]; then
    for file in "$HOME"/.config/shrc.d/* ; do
        . "$file"
    done
    unset -v file
fi

# Load bash scripts
if [ -d "$HOME/.config/bashrc.d" ] ; then
    for file in "$HOME/.config"/bashrc.d/* ; do
        . "$file"
    done
    unset -v file
fi

# source sdkman if it's installed
if [ -f "$HOME/.sdkman/bin/sdkman-init.sh" ]; then
    . "$HOME/.sdkman/bin/sdkman-init.sh"
fi

# setup brew
if [ -d "/home/linuxbrew/.linuxbrew" ]; then
    eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
fi

if type brew &>/dev/null && [ ! -z "$BASH_VERSION" ]; then
    HOMEBREW_PREFIX="$(brew --prefix)"
    if [[ -r "${HOMEBREW_PREFIX}/etc/profile.d/bash_completion.sh" ]]; then
        source "${HOMEBREW_PREFIX}/etc/profile.d/bash_completion.sh"
    else
        for COMPLETION in "${HOMEBREW_PREFIX}/etc/bash_completion.d/"*; do
            [[ -r "$COMPLETION" ]] && source "$COMPLETION"
        done
    fi
fi

# Add RVM
if [ -d "$HOME/.rvm" ]; then
    export PATH="$PATH:$HOME/.rvm/bin"
fi

# Add NVM
if [ -d "$HOME/.nvm" ]; then
    export NVM_DIR="$HOME/.nvm"
    # use ifs to prevent non zero exit state if nvm is not installed
    if [ -s "$NVM_DIR/nvm.sh" ]; then
        \. "$NVM_DIR/nvm.sh"  # This loads nvm
    fi
    if [ -s "$NVM_DIR/bash_completion" ]; then
        \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
    fi
fi
